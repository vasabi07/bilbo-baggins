// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    String     @id @default(cuid())
  email String  @unique
  name  String?
  Threads Thread[]
}

model Thread {
  id String @id @default(uuid())
  userId String
  messages Message[]
  user User @relation(fields: [userId],references: [id])
}
model Message {
  id String @id @default(cuid())
  threadId String
  type MessageType
  content String
  thread Thread @relation(fields: [threadId],references: [id])
}

enum MessageType {
  AI
  HUMAN
}

//in the api side of nextjs lets create routes for login. use clerk
//save user details endpoint
//create thread endpoint 
//get messages endpoint
//save messages endpoint 
//create reports section.
